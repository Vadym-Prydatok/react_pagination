{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","countPages","Math","ceil","length","pages","Array","from","_","index","visiblePages","slice","className","classNames","disabled","href","onClick","map","page","active","item","items","to","numbers","n","push","getNumbers","App","useState","setPage","setPerPages","countVisibleItems","id","value","onChange","event","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAK/B,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAMO,OAASN,GACtCO,EAAQC,MAAMC,KAAKD,MAAML,IAAa,SAACO,EAAGC,GAAJ,OAAcA,EAAQ,KAC5DC,EACJb,EAAMc,OAAOZ,EAAc,GAAKD,EAASA,EAAUC,GAErD,OACE,qCACE,qBAAIa,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAAUf,GAAe,IAF7B,SAKE,mBACE,UAAQ,WACRa,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBhB,EACfiB,QAAS,kBAAMhB,EAA6B,IAAhBD,EACxBA,EACAA,EAAc,IAPpB,oBAYDM,EAAMY,KAAI,SAAAC,GAAI,OACb,oBAEEN,UAAWC,IAAW,YACpB,CAAEM,OAAQD,IAASnB,IAHvB,SAKE,mBACE,UAAQ,WACRa,UAAU,YACVG,KAAK,KACLC,QAAS,kBAAMhB,EAAakB,IAJ9B,SAMGA,KAVEA,MAcT,oBAAIN,UAAWC,IACb,YACA,CAAEC,SAAUf,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRW,UAAU,YACVG,KAAK,QACL,gBAAehB,IAAgBE,EAC/Be,QAAS,kBAAMhB,EAAaD,IAAgBE,EACxCF,EACAA,EAAc,IAPpB,uBAaJ,6BACGW,EAAaO,KAAI,SAAAG,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCxEnB,IAAMC,ECLC,SAAoBd,EAAce,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIjB,EAAMiB,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDFKG,CAAW,EAAG,IACzBT,KAAI,SAAAO,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAA+BC,mBAAS,GAAxC,mBAAO7B,EAAP,KAAoB8B,EAApB,KACA,EAA+BD,mBAAS,GAAxC,mBAAO9B,EAAP,KAAgBgC,EAAhB,KACMC,EAAoBjC,EAAUC,EAEpC,OACE,sBAAKa,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWb,EADX,mBACiCgC,GAAqBjC,EAAU,GADhE,cACwEiC,EAAoBV,EAAMjB,OAASiB,EAAMjB,OAAS2B,EAD1H,eACkJV,EAAMjB,OADxJ,OAIA,sBAAKQ,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,MAAOnC,EACPoC,SAAU,SAACC,GACTL,GAAaK,EAAMC,OAAOH,OAC1BJ,EAAQ,IAPZ,UAUE,wBAAQI,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEf,MAAOwB,EACPvB,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACkB,GAAD,OAAUW,EAAQX,UE7CxCoB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1805d9f9.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\n\ntype Props = {\n  total: string[],\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const countPages = Math.ceil(total.length / perPage);\n  const pages = Array.from(Array(countPages), (_, index) => index + 1);\n  const visiblePages\n  = total.slice((currentPage - 1) * perPage, perPage * currentPage);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames(\n          'page-item',\n          { disabled: currentPage <= 1 },\n        )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => onPageChange(currentPage === 1\n              ? currentPage\n              : currentPage - 1)}\n          >\n            «\n          </a>\n        </li>\n        {pages.map(page => (\n          <li\n            key={page}\n            className={classNames('page-item',\n              { active: page === currentPage })}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href=\"#1\"\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li className={classNames(\n          'page-item',\n          { disabled: currentPage === countPages },\n        )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === countPages}\n            onClick={() => onPageChange(currentPage === countPages\n              ? currentPage\n              : currentPage + 1)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {visiblePages.map(item => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setPage] = useState(1);\n  const [perPage, setPerPages] = useState(5);\n  const countVisibleItems = perPage * currentPage;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${countVisibleItems - (perPage - 1)} - ${countVisibleItems > items.length ? items.length : countVisibleItems} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => {\n              setPerPages(+event.target.value);\n              setPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={items}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page) => setPage(page)}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}